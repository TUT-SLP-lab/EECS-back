openapi: 3.0.0
info:
  title: Test
  version: "0.1"
  description: Test

# TODO: 下の情報を参考に今回のプロダクト用のシステムに修正する
paths:
  /desk:
    get:
      tags:
        - desk
      operationId: get-desks
      description: 座席情報の一覧
      responses:
        "200":
          $ref: "#/components/responses/DeskArray"
  /desk/{desk_id}:
    put:
      tags:
        - desk
      operationId: put-desk-registration
      description: 着席位置の登録（入室）
      parameters:
        - $ref: "#/components/parameters/desk_id_path"
      requestBody:
        $ref: "#/components/requestBodies/RegisterDesk"
      responses:
        "200":
          $ref: "#/components/responses/Desk"
        "409":
          $ref: "#/components/responses/409Conflict"
    delete:
      tags:
        - desk
      operationId: delete-desk-unregistration
      description: 着席情報の削除（退室）
      parameters:
        - $ref: "#/components/parameters/desk_id_path"
      requestBody:
        $ref: "#/components/requestBodies/RegisterDesk"
      responses:
        "200":
          $ref: "#/components/responses/Desk"

components:
  schemas:
    DeskID:
      type: string
      format: uuid
      description: 机のID
      example: 4f73ab32-21bf-47ef-a119-fa024bc2b9cc
    Email:
      type: string
      nullable: true
      description: ユーザーのEメール
      readOnly: true
      example: aaa.bbb.cc@tut.jp
    UserName:
      type: string
      nullable: true
      readOnly: true
      example: 田中夏子

    Desk:
      type: object
      properties:
        desk_id:
          $ref: "#/components/schemas/DeskID"
        room:
          type: string
          description: f-301 or f-310
          example: f-301
        email:
          $ref: "#/components/schemas/Email"
        username:
          $ref: "#/components/schemas/UserName"
        position:
          type: object
          description: 机の位置
          properties:
            x:
              type: integer
              description: 机のx座標
              example: 0
            y:
              type: integer
              description: 机のy座標
              example: 0
        size:
          type: object
          description: 机の大きさ
          properties:
            x:
              type: integer
              description: 机の横方向のサイズ
              example: 10
            y:
              type: integer
              description: 机の縦方向のサイズ
              example: 10
        timestamp:
          properties:
            createdAt:
              type: string
              format: datetime
              description: 作成日時
              readOnly: true
              example: 2020-01-01T00:00:00+09:00
            updatedAt:
              type: string
              format: datetime
              description: 更新日時
              readOnly: true
              example: 2020-01-01T00:00:00+09:00
      required:
        - desk_id
        - email
        - username
        - position
        - size
        - timestamp

    User:
      type: object
      properties:
        username:
          $ref: "#/components/schemas/UserName"
        email:
          $ref: "#/components/schemas/Email"
      required:
        - username
        - email

  parameters:
    desk_id_path:
      name: desk_id
      in: path
      required: True
      schema:
        $ref: '#/components/schemas/DeskID'

  responses:
    DeleteSuccess:
      description: 削除に成功したことを示す
    404NotFound:
      description: The specified resource was not found.
    409Conflict:
      description: The request could not be completed due to a conflict with the current state of the target resource.
    UnauthorizedError:
      description: Access token is missing or invalid
    Desk:
      description: 机の詳細
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Desk"
    DeskArray:
      description: 机の一覧
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Desk"
    User:
      description: ユーザーの詳細
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    UserArray:
      description: ユーザーの一覧
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/User"
  requestBodies:
    RegisterDesk:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Desk"
